!***************************************************************************************************************************************
!<license>
!    Copyright (C) 2017, 2018 State of California, Department of Water Resources. This file is part of the CalSim 3.

!    The CalSim 3 is free software: !<license>

!    you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free
!    Software Foundation, either version 3 of the License, or(at your option) any later version.

!    CalSim 3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty
!    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

!    You should have received a copy of the GNU General Public License along with CalSim 3.  If not, see <http://www.gnu.org/licenses>.
!</license>
!****************************************************************************************************************************************

/*
File Name: constraints-FloodSpill.wresl
CalSim 3.0 System File

Purpose:
To allow flow tops the channel capacity or the reservoir release capacity (RelCap_xxxxx) for flood spill.

Naming takes the following form where {xxxxx} represent the flow node:
C_{xxxxx}_NCF      -- Normal channel flow (NCF) under channel capacity constraint or normal release under MaxRel constaint
C_{xxxxx}_Flood    -- Flood release above MaxRel constraint or normal channel capacity

Z.Q. Richard Chen, BDO 3/3/2017 
*/

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! Trinity River	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
define C_TRNTY_NCF	{lower 0 upper RelCap_TRNTY kind 'CHANNEL' units 'CFS'}  !goal   MaxRel_TRNTY  {C_TRNTY < RelCap_TRNTY}
define C_TRNTY_Flood	{std kind 'SPILL' units 'CFS'}
goal   MaxRel_TRNTY  	{C_TRNTY_NCF + C_TRNTY_Flood = C_TRNTY }
 
define C_LWSTN_NCF	{lower 0 upper 6000  kind 'CHANNEL' units 'CFS'} !define C_LWSTN {lower 0 upper 6000  kind 'CHANNEL' units 'CFS'}
define C_LWSTN_Flood	{std kind 'SPILL' units 'CFS'}
goal   floodC_LWSTN  	{C_LWSTN_NCF+ C_LWSTN_Flood = C_LWSTN }


!goal   MaxRel_WKYTN  {C_WKYTN < RelCap_WKYTN}   !define C_WKYTN {lower 0 upper 3000 kind 'CHANNEL' units 'CFS'}	
define NCFCap_WKYTN     {value min(RelCap_WKYTN,3000)} !combine the reservoir release capacity and the channel capacity as normal channel flow capacity
define C_WKYTN_NCF	{lower 0 upper NCFCap_WKYTN kind 'CHANNEL' units 'CFS'}  
define C_WKYTN_Flood	{std kind 'SPILL' units 'CFS'}  
goal   MaxRel_WKYTN  	{C_WKYTN_NCF + C_WKYTN_Flood = C_WKYTN }

!!!!!!!!!!!!!!!!!!!!!!
!!!!!!! Shasta Lake and Keswick Dam Release
!!!!!!!!!!!!!!!!!!!!!!
define C_SHSTA_NCF	{lower 0 upper RelCap_SHSTA kind 'CHANNEL' units 'CFS'}  !goal   MaxRel_SHSTA  {C_SHSTA < RelCap_SHSTA}
define C_SHSTA_Flood	{std kind 'SPILL' units 'CFS'} 
goal   MaxRel_SHSTA  	{C_SHSTA_NCF + C_SHSTA_Flood = C_SHSTA }

define C_KSWCK_NCF	{lower 0 upper RelCap_KSWCK kind 'CHANNEL' units 'CFS'}  !goal   MaxRel_KSWCK  {C_KSWCK < RelCap_KSWCK}
define C_KSWCK_Flood	{std kind 'SPILL' units 'CFS'} 
goal   MaxRel_KSWCK  	{C_KSWCK_NCF + C_KSWCK_Flood = C_KSWCK }

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! Stony Creek	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
define C_EPARK_NCF	{lower 0 upper RelCap_EPARK kind 'CHANNEL' units 'CFS'}  !goal   MaxRel_EPARK  {C_EPARK < RelCap_EPARK}
define C_EPARK_Flood	{std kind 'SPILL' units 'CFS'} !New Folsom spillway can handle 312,000 cfs, capacity of 8 radia gates = 567,000 cfs
goal   MaxRel_EPARK  	{C_EPARK_NCF + C_EPARK_Flood = C_EPARK }

define C_SGRGE_NCF	{lower 0 upper RelCap_SGRGE kind 'CHANNEL' units 'CFS'}  !goal   MaxRel_SGRGE  {C_SGRGE < RelCap_SGRGE}
define C_SGRGE_Flood	{std kind 'SPILL' units 'CFS'} !New Folsom spillway can handle 312,000 cfs, capacity of 8 radia gates = 567,000 cfs
goal   MaxRel_SGRGE  	{C_SGRGE_NCF + C_SGRGE_Flood = C_SGRGE }

define C_BLKBT_NCF	{lower 0 upper RelCap_BLKBT kind 'CHANNEL' units 'CFS'}  !goal   MaxRel_BLKBT  {C_BLKBT < RelCap_BLKBT}
define C_BLKBT_Flood	{std kind 'SPILL' units 'CFS'} !New Folsom spillway can handle 312,000 cfs, capacity of 8 radia gates = 567,000 cfs
goal   MaxRel_BLKBT  	{C_BLKBT_NCF + C_BLKBT_Flood = C_BLKBT }


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! American River	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
define C_FOLSM_NCF	{lower 0 upper RelCap_FOLSM kind 'CHANNEL' units 'CFS'}  !goal   MaxRel_FOLSM  {C_FOLSM < RelCap_FOLSM}
define C_FOLSM_Flood	{std kind 'SPILL' units 'CFS'} !New Folsom spillway can handle 312,000 cfs, capacity of 8 radia gates = 567,000 cfs
goal   MaxRel_FOLSM  	{C_FOLSM_NCF + C_FOLSM_Flood = C_FOLSM }

define C_NTOMA_NCF	{lower 0 upper 7071*taf_cfs kind 'CHANNEL' units 'CFS'}  !define C_NTOMA  {lower 0 upper 7071*taf_cfs kind 'CHANNEL' units 'CFS'}
define C_NTOMA_Flood	{std kind 'SPILL' units 'CFS'} !7071*taf = 114999 cfs in 31 days and 127320 cfs in 28 days
goal   Flood_NTOMA  	{C_NTOMA_NCF + C_NTOMA_Flood = C_NTOMA }
!goal   MaxRel_NTOMA  {C_NTOMA < RelCap_NTOMA} !not used since RelCap_NTOMA = 169,652 cfs fixed in the res_info table > 7071*taf_cfs


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! Feather River	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
define C_OROVL_NCF	{lower 0 upper RelCap_OROVL kind 'CHANNEL' units 'CFS'}  !goal   MaxRel_OROVL  {C_OROVL < RelCap_OROVL}
define C_OROVL_Flood	{std kind 'SPILL' units 'CFS'}
goal   MaxRel_OROVL  	{C_OROVL_NCF + C_OROVL_Flood = C_OROVL }

define C_FTR072_NCF	{lower 0 upper 210000 kind 'CHANNEL' units 'CFS'}  
define C_FTR072_Flood	{std kind 'SPILL' units 'CFS'} 
goal   Flood_FTR072  	{C_FTR072_NCF + C_FTR072_Flood = C_FTR072 }

define C_FTR029_NCF	{lower 0 upper 210000 kind 'CHANNEL' units 'CFS'} 
define C_FTR029_Flood	{std kind 'SPILL' units 'CFS'}
goal   Flood_FTR029  	{C_FTR029_NCF + C_FTR029_Flood = C_FTR029 }

define C_FTR028_NCF	{lower 0 upper 320000 kind 'CHANNEL' units 'CFS'}  
define C_FTR028_Flood	{std kind 'SPILL' units 'CFS'} 
goal   Flood_FTR028  	{C_FTR028_NCF + C_FTR028_Flood = C_FTR028 }

define C_FTR003_NCF	{lower 0 upper 320000 kind 'CHANNEL' units 'CFS'}  
define C_FTR003_Flood	{std kind 'SPILL' units 'CFS'} 
goal   Flood_FTR003  	{C_FTR003_NCF + C_FTR003_Flood = C_FTR003 }


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! Sutter Bypass 	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
define C_BTC003_NCF	{lower 0 upper 150000 kind 'CHANNEL' units 'CFS'}  
define C_BTC003_Flood	{std kind 'SPILL' units 'CFS'}  
goal   Flood_BTC003  	{C_BTC003_NCF + C_BTC003_Flood = C_BTC003 }

define C_BSL004_NCF	{lower 0 upper 150000 kind 'CHANNEL' units 'CFS'}   
define C_BSL004_Flood	{std kind 'SPILL' units 'CFS'}  
goal   Flood_BSL004  	{C_BSL004_NCF + C_BSL004_Flood = C_BSL004 }

define C_SBP024_NCF	{lower 0 upper 150000 kind 'CHANNEL' units 'CFS'}  
define C_SBP024_Flood	{std kind 'SPILL' units 'CFS'}  
goal   Flood_SBP024  	{C_SBP024_NCF + C_SBP024_Flood = C_SBP024 }

define C_SBP012_NCF	{lower 0 upper 180000 kind 'CHANNEL' units 'CFS'}  
define C_SBP012_Flood	{std kind 'SPILL' units 'CFS'}  
goal   Flood_SBP012  	{C_SBP012_NCF + C_SBP012_Flood = C_SBP012 }

define C_SSL001_NCF	{lower 0 upper 180000 kind 'CHANNEL' units 'CFS'}  
define C_SSL001_Flood	{std kind 'SPILL' units 'CFS'} 
goal   Flood_SSL001  	{C_SSL001_NCF + C_SSL001_Flood = C_SSL001 }


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! Sacramento River	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
define C_SAC195_NCF	{lower 0 upper 150000 kind 'CHANNEL' units 'CFS'}  
define C_SAC195_Flood	{std kind 'SPILL' units 'CFS'}  
goal   Flood_SAC195  	{C_SAC195_NCF + C_SAC195_Flood = C_SAC195 }

define C_SAC085_NCF	{lower 0 upper 230000 kind 'CHANNEL' units 'CFS'}   
define C_SAC085_Flood	{std kind 'SPILL' units 'CFS'}  
goal   Flood_SAC085  	{C_SAC085_NCF + C_SAC085_Flood = C_SAC085 }

define C_SAC063_NCF	{lower 0 upper 110000 kind 'CHANNEL' units 'CFS'}  
define C_SAC063_Flood	{std kind 'SPILL' units 'CFS'} 
goal   Flood_SAC066  	{C_SAC063_NCF + C_SAC063_Flood = C_SAC063 }

define C_SAC036_NCF	{lower 0 upper 110000 kind 'CHANNEL' units 'CFS'}  
define C_SAC036_Flood	{std kind 'SPILL' units 'CFS'} 
goal   Flood_SAC036  	{C_SAC036_NCF + C_SAC036_Flood = C_SAC036 }


!===========
!!! Yuba !!!!
!===========

define C_NBLDB_NCF	{lower 0 upper RelCap_NBLDB kind 'CHANNEL' units 'CFS'}  !goal   MaxRel_NBLDB  {C_NBLDB < RelCap_NBLDB}
define C_NBLDB_Flood	{std kind 'SPILL' units 'CFS'} !New Folsom spillway can handle 312,000 cfs, capacity of 8 radia gates = 567,000 cfs
goal   MaxRel_NBLDB  	{C_NBLDB_NCF + C_NBLDB_Flood = C_NBLDB }



!====
!!! Cache Creek
!========

define C_CLRLK_NCF	{lower 0 upper RelCap_CLRLK kind 'CHANNEL' units 'CFS'}   
define C_CLRLK_Flood	{std kind 'SPILL' units 'CFS'}  
goal   MaxRel_CLRLK  	{C_CLRLK_NCF + C_CLRLK_Flood = C_CLRLK }

define C_INDVL_NCF	{lower 0 upper RelCap_INDVL kind 'CHANNEL' units 'CFS'}  !goal   MaxRel_INDVL  {C_INDVL < RelCap_INDVL}
define C_INDVL_Flood	{std kind 'SPILL' units 'CFS'}  
goal   MaxRel_INDVL  	{C_INDVL_NCF + C_INDVL_Flood = C_INDVL }












!define F_SHSTA	{std kind 'SPILL' units 'CFS'}  

Objective obj_Flood = {
[C_TRNTY_Flood, -900000],
[C_LWSTN_Flood, -900000],
[C_WKYTN_Flood, -900000],
[C_SHSTA_Flood, -900000],
[C_KSWCK_Flood, -900000],
[C_EPARK_Flood, -900000],
[C_SGRGE_Flood, -900000],
[C_BLKBT_Flood, -900000],
[C_FOLSM_Flood, -900000],
[C_NTOMA_Flood, -900000],
[C_OROVL_Flood, -900000],
[C_NBLDB_Flood, -900000],

[C_FTR072_Flood, -900000],
[C_FTR029_Flood, -900000],
[C_FTR028_Flood, -900000],
[C_FTR003_Flood, -900000],
[C_BTC003_Flood, -900000],
[C_BSL004_Flood, -900000],
[C_SBP024_Flood, -900000],
[C_SBP012_Flood, -900000],
[C_SSL001_Flood, -900000],
[C_SAC195_Flood, -900000],
[C_SAC085_Flood, -900000], !230000
[C_SAC063_Flood, -900000], !110000
[C_SAC036_Flood, -900000], !110000

}

