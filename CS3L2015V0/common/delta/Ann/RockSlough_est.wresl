!***************************************************************************************************************************************
!<license>
!    Copyright (C) 2017, 2018 State of California, Department of Water Resources. This file is part of the CalSim 3.

!    The CalSim 3 is free software: !<license>

!    you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free
!    Software Foundation, either version 3 of the License, or(at your option) any later version.

!    CalSim 3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty
!    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

!    You should have received a copy of the GNU General Public License along with CalSim 3.  If not, see <http://www.gnu.org/licenses>.
!</license>
!****************************************************************************************************************************************


!Get the required Sac flow for ESTIMATED exports
define RSReqSac1 {
  case LowCL{
    condition C_SAC041_ANN(-1) >= 40000.
    value 0.}
  case NoSalinityControlPossible{
    condition abs(RS_m_1_sv) <= 0.001 .and. int(RS_b_1_sv) == 0
    value 0.}
  case NegSlope{
    condition RS_m_1_sv <= 0.0
    value 0.}
  case highcost{
    condition RS_Sac_ZeroExp_sv2 >= ANNcap
    value 0.}
  case LargeNegInt{
    condition RS_b_1_sv < -10000.0
    value 0.}  
  case other{
    condition always
    value max(0.,(EstTotExpTD-RS_b_1_sv)/RS_m_1_sv)}
}
define RSReqSac2 {
  case LowCL{
    condition C_SAC041_ANN(-1) >= 40000.
    value 0.}
  case NoSalinityControlPossible{
    condition abs(RS_m_2_sv) <= 0.001 .and. int(RS_b_2_sv) == 0
    value 0.}
  case NegSlope{
    condition RS_m_2_sv <= 0.0
    value 0.}
  case highcost{
    condition RS_Sac_ZeroExp_sv2 >= ANNcap
    value 0.}
  case LargeNegInt{
    condition RS_b_2_sv < -10000.0
    value 0.}    
  case NegCarriage{
    condition RS_m_2_sv >= 1.0
    value 0.}    
  case other{
    condition always
    value max(0.,(EstTotExpTD-RS_b_2_sv)/RS_m_2_sv)}
}
define RSReqSac3 {
  case LowCL{
    condition C_SAC041_ANN(-1) >= 40000.
    value 0.}
  case NoSalinityControlPossible{
    condition abs(RS_m_3_sv) <= 0.001 .and. int(RS_b_3_sv) == 0
    value 0.}
  case NegSlope{
    condition RS_m_3_sv <= 0.0
    value 0.}
  case highcost{
    condition RS_Sac_ZeroExp_sv2 >= ANNcap
    value 0.}
  case LargeNegInt{
    condition RS_b_3_sv < -10000.0
    value 0.}    
  case NegCarriage{
    condition RS_m_3_sv >= 1.0
    value 0.}    
  case other{
    condition always
    value max(0.,(EstTotExpTD-RS_b_3_sv)/RS_m_3_sv)}
}
define RSReqSac {value max(0.,RSReqSac1,RSReqSac2,RSReqSac3)}
define RSReqSacDV {alias RSReqSac kind 'FLOW' units 'CFS'}

