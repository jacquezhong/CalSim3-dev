!***************************************************************************************************************************************
!<license>
!    Copyright (C) 2017, 2018 State of California, Department of Water Resources. This file is part of the CalSim 3.

!    The CalSim 3 is free software: !<license>

!    you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free
!    Software Foundation, either version 3 of the License, or(at your option) any later version.

!    CalSim 3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty
!    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

!    You should have received a copy of the GNU General Public License along with CalSim 3.  If not, see <http://www.gnu.org/licenses>.
!</license>
!****************************************************************************************************************************************

! Robert Leaf 10/09/2001

! export_index
/*
 Using the Export Based rule for CVP SOD Delivery, Maximum Delivery is computed from the
 Export Index.  The Export Index (Mar-Aug) is increased by the EOFeb CVP SL over low point target.
 Then divided by the fraction of Mar-Aug CVP Delivery of total Annual CVP Delivery, thus
 providing an estimate of Delivery capability associated with the Export Index.
*/

define init_CVPRuleDrainTar {value 90.}

! Determination of Maximum SOD CVP Delivery
define Exp_Idx_CVP_adj {
    case MartoMay {
            condition month >= MAR .and. month <= MAY
            value Exp_Idx_CVP_s + S11(PrevFEB) - init_CVPRuleDrainTar + jbypass_del + AnnualBanksCVP}

    case JuntoFeb {
           condition  always
           value      0 }
                       }

define Exp_Idx_CVP_adj_io {
    case MartoMay {
            condition month >= MAR .and. month <= MAY
            value Exp_Idx_CVP_s + S11(PrevFEB) - init_CVPRuleDrainTar + jbypass_del + AnnualBanksCVP + min(SIO_CVP(PrevFEB), max_return_cvp)}

    case JuntoFeb {
           condition  always
           value      0 }
                       }
