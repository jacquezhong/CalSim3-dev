!***************************************************************************************************************************************
!<license>
!    Copyright (C) 2017, 2018 State of California, Department of Water Resources. This file is part of the CalSim 3.

!    The CalSim 3 is free software: !<license>

!    you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free
!    Software Foundation, either version 3 of the License, or(at your option) any later version.

!    CalSim 3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty
!    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

!    You should have received a copy of the GNU General Public License along with CalSim 3.  If not, see <http://www.gnu.org/licenses>.
!</license>
!****************************************************************************************************************************************

! This wresl file defines Knights Landing Ridge Cut operations.
!
! ==========================================================================
!
define C_SAC093_1         {std kind 'FLOW' units 'CFS'}  ! segment above 15000
define C_SAC093_0         {std kind 'FLOW' units 'CFS'}  ! segment from 0 to 15000
define C_SAC093IntFlow    {INTEGER std kind 'INTEGER' units 'NONE'}
define C_SAC093maxmax     {value 500000}

goal C_SAC093SurplusFlow  {C_SAC093 - 15000.0 = C_SAC093_1 - C_SAC093_0}
goal C_SAC093FlowAbove	  {C_SAC093_1         < C_SAC093maxmax - C_SAC093IntFlow*C_SAC093maxmax} ! If C_SAC093 > 15000. then C_SAC093IntFlow = 0
goal C_SAC093FlowBelow    {C_SAC093_0         <                  C_SAC093IntFlow*C_SAC093maxmax}           ! If C_SAC093 < 15000. then C_SAC093IntFlow = 1

!goal LimitC_CBD000        {C_CBD000 < C_SAC093IntFlow*99999.0}

define maxCBD001_KLR005   {timeseries kind 'FLOW_MAX' units 'TAF'}
goal LimitD_CBD001_KLR005 {D_CBD001_KLR005 < maxCBD001_KLR005*taf_cfs + C_SAC093maxmax - C_SAC093IntFlow*C_SAC093maxmax}

define C_CBD000_LP {std kind 'flow-channel' units 'cfs'}
define C_CBD000_HP {std kind 'flow-channel' units 'cfs'}
goal split_C_CBD000 {C_CBD000 = C_CBD000_LP + C_CBD000_HP}

goal lim_C_CBD000_HP {C_CBD000_HP < C_SAC093IntFlow*C_SAC093maxmax} 
