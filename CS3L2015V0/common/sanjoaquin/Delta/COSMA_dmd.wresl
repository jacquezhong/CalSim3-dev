!***************************************************************************************************************************************
!<license>
!    Copyright (C) 2017, 2018 State of California, Department of Water Resources. This file is part of the CalSim 3.

!    The CalSim 3 is free software: !<license>

!    you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free
!    Software Foundation, either version 3 of the License, or(at your option) any later version.

!    CalSim 3 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty
!    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

!    You should have received a copy of the GNU General Public License along with CalSim 3.  If not, see <http://www.gnu.org/licenses>.
!</license>
!****************************************************************************************************************************************

!Define COSMA demand
!AF May 2004
!COSMA M&I monthly demand
define COSMA_MIdmd { timeseries kind 'COSMA-demand' units 'taf' } !M&I monthly demand
define COSMA_dmd_n { value 0.4 * COSMA_MIdmd * taf_cfs } !M&I monthly demand in north region
define COSMA_dmd_c { value 0.3 * COSMA_MIdmd * taf_cfs } !M&I monthly demand in central region
define COSMA_dmd_s { value 0.3 * COSMA_MIdmd * taf_cfs } !M&I monthly demand in south region

!COSMA M&I annual demand in TAF
define COSMA_Octdv { std kind 'COSMA-demand' units 'taf' }
define COSMAOct { !from Oct to Sep
     case oct {
          condition month == oct
          sum(i=0,11,1) COSMA_MIDmd(i) }
     case otherwise {
          condition always
          value COSMA_Octdv(-1) }
     }
	goal set_COSMA_Octdv { COSMA_Octdv = COSMAOct }
define COSMA_MIper_Oct { value COSMA_MIdmd / COSMAOct } !monthly demand distribution

define COSMA_Aprdv { std kind 'COSMA-demand' units 'taf' }
define COSMAApr { !from Apr to Mar
     case FirstYr {
          condition month == Oct .and. wateryear == beginWaterYear
          sum(i=0,5,1) COSMA_MIDmd(i) }
     case LastYr {
          condition month == Apr .and. wateryear == EndWY
          sum(i=0,5,1) COSMA_MIDmd(i) }
     case Apr {
          condition month == Apr
          sum(i=0,11,1) COSMA_MIDmd(i) }
     case otherwise {
          condition always
          value COSMA_Aprdv(-1) }
     }
define COSMA_MIper_Apr { value COSMA_MIdmd / COSMAApr } !monthly demand distribution
	goal set_COSMA_Aprdv { COSMA_Aprdv = COSMAApr }

!COSMA Ag monthly demand
!total demand
define COSMA_AGdmd { timeseries kind 'COSMA-demand' units 'taf' convert 'cfs'}
!demand from GW pumping
define COSMA_AG_gw { timeseries kind 'COSMA-demand' units 'taf' convert 'cfs'}
!riparian demand from Delta
define COSMA_AG_sw { value COSMA_AGdmd - COSMA_AG_gw }

